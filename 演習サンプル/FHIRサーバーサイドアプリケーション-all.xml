<?xml version="1.0" encoding="UTF-8"?>
<Export generator="IRIS" version="26" zv="IRIS for Windows (x86-64) 2021.1 (Build 215U)" ts="2021-07-26 12:35:34">
<Class name="Solution.FHIRBPL.Context">
<Description>
This class is generated by the Solution.FHIRBPL BPL class.
This class should not be edited or modified in any way.
Do not make direct use of this class in your application.</Description>
<ClassType>persistent</ClassType>
<CompileAfter>Solution.FHIRBPL</CompileAfter>
<IncludeCode/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.BP.Context</Super>
<TimeChanged>65951,42716.497115</TimeChanged>
<TimeCreated>65951,42716.16827</TimeCreated>
<GeneratedBy>Ens.BPL.Compiler.CLS</GeneratedBy>

<Property name="O2Sat">
<Type>%Integer</Type>
</Property>

<Property name="PID">
<Type>%String</Type>
<Parameter name="MAXLEN" value="50"/>
</Property>

<Property name="Schedule">
<Type>EnsLib.HL7.Message</Type>
</Property>

<Property name="family">
<Type>%String</Type>
<Parameter name="MAXLEN" value="50"/>
</Property>

<Property name="givenname">
<Type>%String</Type>
<Parameter name="MAXLEN" value="50"/>
</Property>

<Method name="OnResponse1">
<Description>
Response Handler for call to HS.FHIRServer.Interop.Operation</Description>
<FormalSpec>process:Ens.BusinessProcess,context:Ens.BP.Context,request:HS.FHIRServer.Interop.Request,response:HS.FHIRServer.Interop.Response,callrequest:HS.FHIRServer.Interop.Request,callresponse:HS.FHIRServer.Interop.Response,callname:%String</FormalSpec>
<Language>objectscript</Language>
<PublicList>process,context</PublicList>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 Set $ZT="Trap",status=$$$OK do {
 Set status=$$$OK,response=callresponse
 If $$$ISERR(status) Quit
 } while (0)
Exit Quit status
Trap Set $ZT="",status=##class(Ens.Util.Error).EnsSystemError("Solution.FHIRBPL.Thread1","OnResponse1")
 Goto Exit
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DefaultData>ContextDefaultData1</DefaultData>
<Data name="ContextDefaultData1">
<Structure>listnode</Structure>
<Subscript>"Context"</Subscript>
<Value name="1">
<Value>O2Sat</Value>
</Value>
<Value name="2">
<Value>PID</Value>
</Value>
<Value name="3">
<Value>Schedule</Value>
</Value>
<Value name="4">
<Value>family</Value>
</Value>
<Value name="5">
<Value>givenname</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="Solution.FHIRBPL.Thread1">
<Description>
This class is generated by the Solution.FHIRBPL BPL class.
This class should not be edited or modified in any way.
Do not make direct use of this class in your application.</Description>
<ClassType>persistent</ClassType>
<CompileAfter>Solution.FHIRBPL</CompileAfter>
<IncludeCode/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.BP.Thread</Super>
<TimeChanged>65951,42716.523433</TimeChanged>
<TimeCreated>65951,42716.168934</TimeCreated>
<GeneratedBy>Ens.BPL.Compiler.CLS</GeneratedBy>

<Method name="S1">
<FormalSpec>process:Ens.BusinessProcess,context:Ens.BP.Context,synctimedout:%Boolean,syncresponses:%ArrayOfObjects(ELEMENTTYPE="%Library.Persistent"),request:%Library.Persistent,response:%Library.Persistent</FormalSpec>
<Language>objectscript</Language>
<PublicList>process,context</PublicList>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 Set $ZT="Trap",status=$$$OK do {
 #; --- Begin Call Call Operation ---
 #; --- Begin Request ---
 Set callrequest=##class(HS.FHIRServer.Interop.Request).%New()
 If '$IsObject(callrequest) Set status=%objlasterror Quit
 Set status=$$$OK,callrequest=request
 If $$$ISERR(status) Quit
 Set status=..MakeAsyncCall("OnResponse1","HS.FHIRServer.Interop.Operation",callrequest,"Call Operation",1,0,"Call Operation",1)
 If $$$ISERR(status) Quit
 Kill callrequest
 #; --- End Request ---
 #; --- End Call Call Operation ---
 Do ..%PendingResponses.Clear(),..%SyncResponses.Clear()
 Set ..%SyncTimedOut=0,..%PendingTimeout="",..%PendingAlarmHandle="",..%SyncName=""
 If ..%Process.IsResponsePending("Call Operation") Do ..%PendingResponses.SetAt("","Call Operation")
 If ..%PendingResponses.Count()=0 {
    Set ..%NextState="S3"
 } else {
    Set ..%NextState="S2",..%Wait=1
 }
 } while (0)
Exit Quit ..ManageState(status)
Trap Set $ZT="",status=..ManageStatus(status,"S1") Goto Exit
]]></Implementation>
</Method>

<Method name="S2">
<FormalSpec>process:Ens.BusinessProcess,context:Ens.BP.Context,synctimedout:%Boolean,syncresponses:%ArrayOfObjects(ELEMENTTYPE="%Library.Persistent"),request:%Library.Persistent,response:%Library.Persistent</FormalSpec>
<Language>objectscript</Language>
<PublicList>process,context</PublicList>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 Set $ZT="Trap",status=$$$OK do {
 If ..%PendingResponses.Count()=0 {
    Set ..%NextState="S3"
 } else {
    Set ..%NextState="S2",..%Wait=1
 }
 } while (0)
Exit Quit ..ManageState(status)
Trap Set $ZT="",status=..ManageStatus(status,"S2") Goto Exit
]]></Implementation>
</Method>

<Method name="S3">
<FormalSpec>process:Ens.BusinessProcess,context:Ens.BP.Context,synctimedout:%Boolean,syncresponses:%ArrayOfObjects(ELEMENTTYPE="%Library.Persistent"),request:%Library.Persistent,response:%Library.Persistent</FormalSpec>
<Language>objectscript</Language>
<PublicList>process,context</PublicList>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 Set $ZT="Trap",status=$$$OK do {
 Do {

  // POST時のリソースに何が含まれているか確認のためストリームからJSONに変換
  if (request.Request.RequestMethod="POST") {
     set quickStream = ##class(HS.SDA3.QuickStream).%OpenId(request.QuickStreamId)
     set json=##class(%DynamicObject).%FromJSON(quickStream)
  }
   
  // Observation（オキシメーター値）はBundleで渡される
  // Patient単一更新以外を判定するには RequestPath=""の時として判断
  if (request.Request.RequestMethod="POST") && (request.Request.RequestPath=""){
    
    set context.O2Sat = json.entry.%Get(1).resource.valueQuantity.value
    set context.family = json.entry.%Get(0).resource.name.%Get(0).family
    set context.givenname=json.entry.%Get(0).resource.name.%Get(0).given.%Get(0)
    set context.PID = json.entry.%Get(0).resource.identifier.%Get(0).value
    $$$TRACE("valueQuantity の値: "_context.O2Sat_"|"_context.family_context.givenname)

    /*　以下、オリジナル（Observation単独更新）
     https://gettingstartedhealth.intersystems.com/integrating-devices/tracking-fhir/  
    // FHIR data comes in as a Quickstream object, which is like a BLOB
    // It must be read into a string before it can be handled
    // Start by opening the Quickstream object whose ID is part of the request.
    //set quickStream = ##class(HS.SDA3.QuickStream).%OpenId(request.QuickStreamId)

    // Read that stream into a Dynamic object, which can represent
    // JSON data
    //set Observation = ##class(%DynamicObject).%FromJSON(quickStream)

    // Access the oxygen saturation value and place it in a local 
    // Context variable.
    //set context.O2Sat = Observation.valueQuantity.value
    */

 }
 } while (0)
 If $$$ISERR(status) Quit
 If (context.O2Sat && (context.O2Sat < 90) ) {
 Set ..%NextState="S5"
 } else {
 Set ..%NextState="S4"
 }
 } while (0)
Exit Quit ..ManageState(status)
Trap Set $ZT="",status=..ManageStatus(status,"S3") Goto Exit
]]></Implementation>
</Method>

<Method name="S4">
<FormalSpec>process:Ens.BusinessProcess,context:Ens.BP.Context,synctimedout:%Boolean,syncresponses:%ArrayOfObjects(ELEMENTTYPE="%Library.Persistent"),request:%Library.Persistent,response:%Library.Persistent</FormalSpec>
<Language>objectscript</Language>
<PublicList>process,context</PublicList>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 Set $ZT="Trap",status=$$$OK do {
 Do process.ClearAllPendingResponses()
 Set ..%NextState="Stop"
 } while (0)
Exit Quit ..ManageState(status)
Trap Set $ZT="",status=..ManageStatus(status,"S4") Goto Exit
]]></Implementation>
</Method>

<Method name="S5">
<FormalSpec>process:Ens.BusinessProcess,context:Ens.BP.Context,synctimedout:%Boolean,syncresponses:%ArrayOfObjects(ELEMENTTYPE="%Library.Persistent"),request:%Library.Persistent,response:%Library.Persistent</FormalSpec>
<Language>objectscript</Language>
<PublicList>process,context</PublicList>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 Set $ZT="Trap",status=$$$OK do {
 Set iscTemp=context.Schedule
 Set status=$classmethod("Solution.FromFhirObsToSIUS12","Transform",context,.iscTemp,"")
 If $$$ISERR(status) Quit
 Set context.Schedule=iscTemp
 #; --- Begin Call To Scheduling Service ---
 #; --- Begin Request ---
 Set callrequest=##class(EnsLib.HL7.Message).%New()
 If '$IsObject(callrequest) Set status=%objlasterror Quit
 Set status=$$$OK,callrequest=context.Schedule
 If $$$ISERR(status) Quit
 Set status=..MakeAsyncCall("","To_Scheduling",callrequest,"To Scheduling Service",0,0,"To Scheduling Service",0)
 If $$$ISERR(status) Quit
 Kill callrequest
 #; --- End Request ---
 #; --- End Call To Scheduling Service ---
 Set ..%NextState="S4"
 } while (0)
Exit Quit ..ManageState(status)
Trap Set $ZT="",status=..ManageStatus(status,"S5") Goto Exit
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
</Storage>
</Class>


<Class name="Solution.FHIRBPL">
<Description>
</Description>
<Super>Ens.BusinessProcessBPL</Super>
<TimeChanged>65932,69161.352822</TimeChanged>
<TimeCreated>65932,67976.863672</TimeCreated>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
</Storage>

<XData name="BPL">
<Description>
BPL Definition</Description>
<XMLNamespace>http://www.intersystems.com/bpl</XMLNamespace>
<Data><![CDATA[
<process language='objectscript' request='HS.FHIRServer.Interop.Request' response='HS.FHIRServer.Interop.Response' height='2000' width='2000' >
<context>
<property name='O2Sat' type='%Integer' instantiate='0' />
<property name='Schedule' type='EnsLib.HL7.Message' instantiate='0' />
<property name='family' type='%String' instantiate='0' >
<parameters>
<parameter name='MAXLEN'  value='50' />
</parameters>
</property>
<property name='givenname' type='%String' instantiate='0' >
<parameters>
<parameter name='MAXLEN'  value='50' />
</parameters>
</property>
<property name='PID' type='%String' instantiate='0' >
<parameters>
<parameter name='MAXLEN'  value='50' />
</parameters>
</property>
</context>
<sequence xend='200' yend='900' >
<call name='Call Operation' target='HS.FHIRServer.Interop.Operation' async='0' xpos='200' ypos='250' >
<annotation><![CDATA[Pass FHIR requests onto FHIR server for CRUD operations]]]]><![CDATA[></annotation>
<request type='HS.FHIRServer.Interop.Request' >
<assign property="callrequest" value="request" action="set" />
</request>
<response type='HS.FHIRServer.Interop.Response' >
<assign property="response" value="callresponse" action="set" />
</response>
</call>
<code name='Get O2 Data' xpos='200' ypos='350' >
<annotation><![CDATA[Unpack FHIR payload and expose the oxygen saturation in the context variable O2Sat]]]]><![CDATA[></annotation>
<![CDATA[
  // POST時のリソースに何が含まれているか確認のためストリームからJSONに変換
  if (request.Request.RequestMethod="POST") {
     set quickStream = ##class(HS.SDA3.QuickStream).%OpenId(request.QuickStreamId)
     set json=##class(%DynamicObject).%FromJSON(quickStream)
  }
   
  // Observation（オキシメーター値）はBundleで渡される
  // Patient単一更新以外を判定するには RequestPath=""の時として判断
  if (request.Request.RequestMethod="POST") && (request.Request.RequestPath=""){
    
    set context.O2Sat = json.entry.%Get(1).resource.valueQuantity.value
    set context.family = json.entry.%Get(0).resource.name.%Get(0).family
    set context.givenname=json.entry.%Get(0).resource.name.%Get(0).given.%Get(0)
    set context.PID = json.entry.%Get(0).resource.identifier.%Get(0).value
    $$$TRACE("valueQuantity の値: "_context.O2Sat_"|"_context.family_context.givenname)

    /*　以下、オリジナル（Observation単独更新）
     https://gettingstartedhealth.intersystems.com/integrating-devices/tracking-fhir/  
    // FHIR data comes in as a Quickstream object, which is like a BLOB
    // It must be read into a string before it can be handled
    // Start by opening the Quickstream object whose ID is part of the request.
    //set quickStream = ##class(HS.SDA3.QuickStream).%OpenId(request.QuickStreamId)

    // Read that stream into a Dynamic object, which can represent
    // JSON data
    //set Observation = ##class(%DynamicObject).%FromJSON(quickStream)

    // Access the oxygen saturation value and place it in a local 
    // Context variable.
    //set context.O2Sat = Observation.valueQuantity.value
    */

 }]]]]><![CDATA[>
</code>
<if name='Check O2 Levels' condition='context.O2Sat &amp;&amp; (context.O2Sat &lt; 90) ' xpos='200' ypos='450' xend='200' yend='800' >
<true>
<transform name='Trasform to send' class='Solution.FromFhirObsToSIUS12' source='context' target='context.Schedule' xpos='335' ypos='600' />
<call name='To Scheduling Service' target='To_Scheduling' async='1' xpos='335' ypos='700' >
<request type='EnsLib.HL7.Message' >
<assign property="callrequest" value="context.Schedule" action="set" />
</request>
</call>
</true>
</if>
</sequence>
</process>
]]></Data>
</XData>
</Class>


<Class name="Solution.FoundationProduction">
<ProcedureBlock>0</ProcedureBlock>
<Super>Ens.Production</Super>
<TimeChanged>65932,68010.541675</TimeChanged>
<TimeCreated>65932,67972.044238</TimeCreated>

<XData name="ProductionDefinition">
<Data><![CDATA[
<Production Name="Solution.FoundationProduction" TestingEnabled="true" LogGeneralTraceEvents="true">
  <Description></Description>
  <ActorPoolSize>1</ActorPoolSize>
  <Item Name="HS.FHIRServer.Interop.Service" Category="" ClassName="HS.FHIRServer.Interop.Service" PoolSize="0" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="TargetConfigName">Solution.FHIRBPL</Setting>
    <Setting Target="Host" Name="TraceOperations"></Setting>
  </Item>
  <Item Name="Solution.FHIRBPL" Category="" ClassName="Solution.FHIRBPL" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="true" Schedule="">
  </Item>
  <Item Name="HS.FHIRServer.Interop.Operation" Category="" ClassName="HS.FHIRServer.Interop.Operation" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="TraceOperations">*FULL*</Setting>
  </Item>
  <Item Name="To_Scheduling" Category="" ClassName="EnsLib.HL7.Operation.FileOperation" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Adapter" Name="FilePath">c:\temp\out</Setting>
    <Setting Target="Host" Name="Filename">%f_%Q%!+(_a)</Setting>
  </Item>
  <Item Name="HS.Util.Trace.Operations" Category="" ClassName="HS.Util.Trace.Operations" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
  </Item>
</Production>
]]></Data>
</XData>
</Class>


<Class name="Solution.FromFhirObsToSIUS12">
<Super>Ens.DataTransformDTL</Super>
<TimeChanged>65932,69216.443676</TimeChanged>
<TimeCreated>65932,67964.507933</TimeCreated>
<DependsOn>Solution.FHIRBPL.Context,EnsLib.HL7.Message</DependsOn>

<Parameter name="IGNOREMISSINGSOURCE">
<Default>1</Default>
</Parameter>

<Parameter name="REPORTERRORS">
<Default>1</Default>
</Parameter>

<Parameter name="TREATEMPTYREPEATINGFIELDASNULL">
<Default>0</Default>
</Parameter>

<XData name="DTL">
<XMLNamespace>http://www.intersystems.com/dtl</XMLNamespace>
<Data><![CDATA[
<transform sourceClass='Solution.FHIRBPL.Context' targetClass='EnsLib.HL7.Message' targetDocType='2.5:SIU_S12' create='new' language='objectscript' >
<assign value='"^~\&amp;"' property='target.{MSH:FieldSeparator}' action='set' />
<assign value='"EPIC"' property='target.{MSH:EncodingCharacters}' action='set' />
<assign value='"EPIC"' property='target.{MSH:SendingApplication}' action='set' />
<assign value='..Strip($ZDATETIME($H,8),"*P")' property='target.{MSH:DateTimeOfMessage}' action='set' />
<assign value='"SIU"' property='target.{MSH:MessageType.MessageCode}' action='set' />
<assign value='"S12"' property='target.{MSH:MessageType.TriggerEvent}' action='set' />
<assign value='538' property='target.{MSH:MessageControlID}' action='set' />
<assign value='"D"' property='target.{MSH:ProcessingID.ProcessingID}' action='set' />
<assign value='2.5' property='target.{MSH:VersionID.VersionID}' action='set' />
<assign value='"ISO IR87"' property='target.{MSH:CharacterSet(2)}' action='set' />
<assign value='"01928374"' property='target.{SCH:PlacerAppointmentID}' action='set' />
<assign value='"57483920"' property='target.{SCH:FillerAppointmentID}' action='set' />
<assign value='"飽和酸素度が低い数値です : "_source.O2Sat' property='target.{SCH:AppointmentReason.Text}' action='set' />
<assign value='1' property='target.{SCH:AppointmentDuration}' action='set' />
<assign value='"hr"' property='target.{SCH:AppointmentDurationUnits.Identifier}' action='set' />
<assign value='1' property='target.{SCH:AppointmentTimingQuantity(1).Quantity}' action='set' />
<assign value='..Strip($ZDATETIME($H,8),"*P")' property='target.{SCH:AppointmentTimingQuantity(1).StartDateTime.Time}' action='set' />
<assign value='1173' property='target.{SCH:EnteredByPerson(1).IDNumber}' action='set' />
<assign value='"MATTHEWS"' property='target.{SCH:EnteredByPerson(1).FamilyName.Surname}' action='set' />
<assign value='"JAMES"' property='target.{SCH:EnteredByPerson(1).GivenName}' action='set' />
<assign value='"A"' property='target.{SCH:EnteredByPerson(1).SecondandFurtherGivenNamesor}' action='set' />
<assign value='"BOOKED"' property='target.{SCH:FillerStatusCode.Identifier}' action='set' />
<assign value='1' property='target.{RGSgrp(1).RGS:SetIDRGS}' action='set' />
<assign value='"A"' property='target.{RGSgrp(1).RGS:SegmentActionCode}' action='set' />
<assign value='"094"' property='target.{RGSgrp(1).RGS:ResourceGroupID.Identifier}' action='set' />
<assign value='source.PID' property='target.{PIDgrp(1).PID:PatientID.IDNumber}' action='set' />
<assign value='source.family' property='target.{PIDgrp(1).PID:PatientName(1).FamilyName}' action='set' />
<assign value='source.givenname' property='target.{PIDgrp(1).PID:PatientName(1).GivenName}' action='set' />
</transform>
]]></Data>
</XData>
</Class>
</Export>
